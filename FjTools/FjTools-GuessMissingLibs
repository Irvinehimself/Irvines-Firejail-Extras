#!/bin/bash

###############################################
# Copyright (C) 2017  Irvine McMinn (irvine mcminn at gmail dot com)
#
# FjTools is a collection of extra profiles, local customisations and
# tools for Firejail. The project home page can be found at
# https://github.com/Irvinehimself/Irvines-Firejail-Extras
#
# FjTools is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# FjTools is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ArchAudit-Report.  If not, see <http://www.gnu.org/licenses/>.
###############################################

# Get a list of an applications dependencies

source FjTools-Shared
#source FjTools-GetAppDependencies

 ### ### Functions ### ###
 function EchoToScreen(){
    echo "$1"
    echo
}

function GetAppName(){
    # If AppName has not been assigned manually, then ask user
    if [[ "$AppName" = "" ]] ; then
    	echo "Guess contents of private-lib"
    	echo "Enter application name, null string to cancel"
    	read AppName
    	echo
	fi
}

function GetDependencies(){
	if ! [ -e  "$FjDependencyChainFile-$AppName" ] ; then
	        FjTools-GetAppDependencies "$AppName"
	    else
	            EchoToScreen "Dependency chain already exist, skipping get dependencies"
	fi
	DependencyChain="$(cat $FjDependencyChainFile-$AppName)"
}

function GetPrivateLibSugestions(){
    local Line="Dummy"
    local PkgOwner="Dummy"
    local DepTest="Dummy"
    local Count="0"
    ls "$UsrLib" |\
    while read Line ; do
        PkgOwner=$(GetPckgOwner "$UsrLib/$Line")
        #EchoToScreen "$Line is owned by $PkgOwner"
        if [[ "$DependencyChain" = *",$PkgOwner,"* ]] ; then
            EchoToScreen "Adding $Line to private-lib file"
            echo "$Line" >> "$FjGuessPrivateLibFile-$AppName"
            ((Count++))
            if [[ "$Count" = "$BinaryChop"  ]] ; then
                Count="0"
                EchoToScreen "Adding binary chop marker to private-lib file"
                echo "### ### ### ### ### ### Binary Chop ### ### ### ### ### ###" >> "$FjGuessPrivateLibFile-$AppName"
            fi
        fi
    done
}

 ### End functions

 ### ### Main ### ###

GetAppName
if ! [[ "$AppName" = "" ]] ; then
    GetDependencies
    mkdir -p "$FjPrivateLibFolder"
    echo "" > "$FjGuessPrivateLibFile-$AppName" # Reset
    GetPrivateLibSugestions
    cp $FjDependencyLibraryFile-$AppName $FjPrivateLibLibraryFile-$AppName
    cp $FjDependencyNotFoundFile-$AppName $FjPrivateLibNotFoundFile-$AppName
    EchoToScreen "You can find the private-lib suggestions at $FjGuessPrivateLibFile-$AppName"
    EchoToScreen "Hit return to quit"
    read Quit
fi
